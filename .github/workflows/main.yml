name: "Deploy to production"

on:

  push:
    branches: [ main ]

  workflow_dispatch:

env:
  REGISTRY: registry.digitalocean.com/pokemon-app-registry
  IMAGE_NAME: pokemon-app

jobs:

  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: "Obtener el codigo"
        uses: actions/checkout@v3
        
      - name: "Construir la imagen"
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: "Instalar doctl"
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}
    
      - name: "Conectar al container registry"
        run: doctl registry login
      
      - name: "Eliminar imagenes antiguas"
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: "Subir imagen al container registry"
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: "Realizar despliegue en el droplet"
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DO_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            docker login -u ${{ secrets.DO_ACCESS_TOKEN }} -p ${{ secrets.DO_ACCESS_TOKEN }} registry.digitalocean.com
            docker stop $(echo $IMAGE_NAME)
            docker rm -f $(echo $IMAGE_NAME)
            docker run -dp 80:80 \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
